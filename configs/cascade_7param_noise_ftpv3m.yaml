---
##############
# Config for single cascade events
#
# Detailed information on the parameters are given in the SetupManager
# class located in egenerator.settings.setup_manager.py.
##############

# Provide a unique name for the model
unique_name: 'cascade_7param_noise_ftpv3m'

#------------------
# Training settings
#------------------
training_settings: {
    'optimizer_name': 'Adam',
    'optimizer_settings': {
        # 'amsgrad': True,
        'learning_rate': {
            'full_class_string': 'egenerator.utils.learning_rate.MultiLearningRateScheduler',
            'settings':{
                'boundaries': [1000, 1000000],
                'scheduler_settings': [
                    {
                    'full_class_string': 'tensorflow.keras.optimizers.schedules.PolynomialDecay',
                    'settings': {
                        'initial_learning_rate': 0.00001,
                        'end_learning_rate': 0.001,
                        'decay_steps': 1000,
                        },
                    },
                    {
                    'full_class_string': 'tensorflow.keras.optimizers.schedules.PolynomialDecay',
                    'settings': {
                        'initial_learning_rate': 0.001,
                        'end_learning_rate': 0.001,
                        'decay_steps': 999000,
                        },
                    },
                    {
                    'full_class_string': 'tensorflow.keras.optimizers.schedules.PolynomialDecay',
                    'settings': {
                        'initial_learning_rate': 0.001,
                        'end_learning_rate': 0.000001,
                        'decay_steps': 500000,
                        'power': 2,
                        },
                    },
                ]
            },
        },
    },
    'l1_regularization': 0.,
    'l2_regularization': 0.,
    'clip_gradients_value': ,
    'remove_nan_gradients': False,

    'validation_frequency': 100,
    'evaluation_frequency': 100,
    'save_frequency': 500,

    # Number of training iterations to train the model for
    'num_training_iterations': 1500000,

    # Additional keywords to the loss module used for training
    'additional_loss_module_kwargs': {
        'normalize_by_total_charge': False,
    },
}

#----------------.-------
# Reconstruction settings
#------------------------
reconstruction_settings: {
    'reco_output_file': '../data/reconstruction/{unique_name}/reconstruction_{unique_name}.hdf5',

    # Define which modules to run
    'calculate_covariance_matrix': False,
    'calculate_goodness_of_fit': False,
    'estimate_angular_uncertainty': False,
    'run_mcmc': False,
    'make_1d_llh_scans': False,

    # define which tensor to use as parameter_tensor (default: x_parameters)
    'parameter_tensor_name': 'x_parameters',
    # define seed (to seed from MC truth choose: 'x_parameters')
    'seed': 'MonopodFit4_PartialExclusion',
    # these are only relevant for the SeedLoaderMiscModule. This specifies
    # from which column names in the data table the parameters will be loaded
    'seed_parameter_names': ['x', 'y', 'z', 'zenith', 'azimuth',
                             'energy', 'time',
                         ],
    'seed_missing_value': 1.,
    'seed_missing_value_dict': {
    },
    'seed_float_precision': 'float32',

    # choose the optimizer interface:
    #   'scipy' or 'tfp' (tensorflow_probability)
    'reco_optimizer_interface': 'scipy',

    'scipy_optimizer_settings': {
        # 'method': 'L-BFGS-B',
        'method': 'BFGS',
        'options': {
            # 'ftol': !!float 1e-7,
            'gtol': !!float 1e1,
        }
    },

    'tf_optimizer_settings': {
        'method': 'bfgs_minimize',
        'x_tolerance': 0.001,
    },

    # Perform minimization in transformed and normalized parameter space
    # if True. This is usually desired as it may facilitate minimization.
    'minimize_in_trafo_space': True,

    # Specify which parameters to fit.
    # If True, the parameter is minimized doing reconstruction, otherwise it
    # is held constant.
    # Set default value which will apply to all parameters, except if stated
    # otherwise in the 'minimize_parameter_dict'
    'minimize_parameter_default_value': True,
    # Settings defined here overwrite the default value
    # Entries must have the form: {parameter_name: value}
    'minimize_parameter_dict': {

    },
}

#-----------------------
# Model Manager settings
#-----------------------

# Settings for model manager class
model_manager_settings: {

    # The loss module class to use
    'model_manager_class': 'egenerator.manager.source.SourceManager',

    # restore model if True, otherwise start from scratch
    'restore_model' : True,

    # These settings are used to configure the model manager and may not change
    config: {

        # Path to where the manager will be saved to and loaded from
        'manager_dir': '../data/training/{unique_name}/manager',

        # Define which model parameters to use for the I3Particle
        # [x, y, z, zenith, azimuth, energy, time]
        'I3ParticleMapping': {
            'x': 'cascade_x',
            'y': 'cascade_y',
            'z': 'cascade_z',
            'zenith': 'cascade_zenith',
            'azimuth': 'cascade_azimuth',
            'energy': 'cascade_energy',
            'time': 'cascade_time',
        },
    },
}

#-----------------------
# Data Iterator settings
#-----------------------

# These settings describe the data iterators
data_iterator_settings: {

    # The training data iterator
    'training': {
        'batch_size': 32,
        'num_splits': ,
        'file_capacity': 5,
        'batch_capacity': 500,
        'dataset_capacity': 50,
        'num_jobs': 12,
        'num_add_files': 12,
        'num_repetitions': 5,
        'input_data': [
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30248/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30249/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30250/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30251/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30252/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
        ],
    },

    # The trafo data iterator
    'trafo': {
        'batch_size': 32,
        'num_splits': ,
        'file_capacity': 1,
        'batch_capacity': 2,
        'num_jobs': 20,
        'num_add_files': 0,
        'num_repetitions': 1,
        'pick_random_files_forever': False,
        'input_data': [
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30248/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30249/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30250/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30251/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30252/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
        ],
    },

    # The validation data iterator
    'validation': {
        'batch_size': 32,
        'num_splits': ,
        'file_capacity': 1,
        'batch_capacity': 10,
        'dataset_capacity': 10,
        'num_jobs': 3,
        'num_add_files': 3,
        'num_repetitions': 1,
        'pick_random_files_forever': True,
        'input_data': [
            # Note: The validation data is the same as the training data. Do not pay attention to validation curve!
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30248/cascades/step_3_pass2_get_all_pulses/*/*0.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30249/cascades/step_3_pass2_get_all_pulses/*/*0.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30250/cascades/step_3_pass2_get_all_pulses/*/*0.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30251/cascades/step_3_pass2_get_all_pulses/*/*0.hdf5',
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30252/cascades/step_3_pass2_get_all_pulses/*/*0.hdf5',
        ],
    },

    # The test data iterator
    'test': {
        'batch_size': 1,
        'num_splits': ,
        'file_capacity': 1,
        'batch_capacity': 3,
        'num_jobs': 1,
        'num_add_files': 0,
        'num_repetitions': 1,
        'sample_randomly': False,
        'pick_random_files_forever': False,
        'input_data': [

            # # validation data
            # '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30248/cascades/step_3_pass2_get_all_pulses/*/*00000.hdf5',
            # '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/30249/cascades/step_3_pass2_get_all_pulses/*/*00000.hdf5',

            # FTPv3m baseline
            '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/99915/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            # # FTPv3m SnowStorm
            # '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/99916/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            # # FTPv3m SnowStorm Absorption
            # '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/99917/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            # # FTPv3m SnowStorm Scattering
            # '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/99918/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',
            # # FTPv3m SnowStorm HoleIce
            # '/data/ana/reconstruction/2018/gnn/training_data/egenerator-v1.1.0/datasets/99919/cascades/step_3_pass2_get_all_pulses/*/*.hdf5',

        ],
    },
}

#---------------------
# Loss module settings
#---------------------

# Settings for the loss module class
loss_module_settings: [
    {
        # The loss module class to use
        'loss_module': 'egenerator.loss.default.DefaultLossModule',
        'loss_module_weight': 1.0,

        config: {
            # the float precision to use
            'float_precision': 'float64',
            # Add normalization terms to llh if True
            'add_normalization_term': True,
            # choose the loss function to use
            'loss_function_name': 'unbinned_pulse_time_llh',
        },
    },
    {
        # The loss module class to use
        'loss_module': 'egenerator.loss.default.DefaultLossModule',
        'loss_module_weight': 1.0,

        config: {
            # the float precision to use
            'float_precision': 'float64',
            # Add normalization terms to llh if True
            'add_normalization_term': True,
            # choose the loss function to use
            'loss_function_name': 'normalized_dom_charge_pdf',
        },
    },
    {
        # The loss module class to use
        'loss_module': 'egenerator.loss.default.DefaultLossModule',
        'loss_module_weight': 1.0,

        config: {
            # the float precision to use
            'float_precision': 'float64',
            # Add normalization terms to llh if True
            'add_normalization_term': True,
            # choose the loss function to use
            'loss_function_name': 'negative_binomial_charge_pdf',
        },
    },
    {
        # The loss module class to use
        'loss_module': 'egenerator.loss.default.DefaultLossModule',
        'loss_module_weight': 1.0,

        config: {
            # the float precision to use
            'float_precision': 'float64',
            # Add normalization terms to llh if True
            'add_normalization_term': True,
            # choose the loss function to use
            'loss_function_name': 'negative_binomial_event_charge_pdf',
        },
    },
]

#---------------------------
# Evaluation module settings
#---------------------------

# Settings for the evaluation module class
evaluation_module_settings: {

    # The loss module class to use
    'evaluation_module':,
    config: {
    },
}

#-----------------------------
# Data Transformation settings
#-----------------------------
data_trafo_settings: {
    'float_precision': 'float64',
    'norm_constant': !!float 1e-6,
    'num_batches': 5000,
    'model_dir': '/data/user/mhuennefeld/data/egenerator/trafo_models/trafo_model_cascade_7param_noise_ftpv3m',
}

#----------------------
# Data Handler settings
#----------------------

# Settings for the data handler class
data_handler_settings: {

    # The data handler class to use
    'data_handler': 'modular.ModuleDataHandler',

    # -------------------
    # DataModule Settings
    # -------------------
    # which data module to use
    'data_module': 'pulse_data.PulseDataModule',

    # settings for the data module
    'data_settings':{
        'pulse_key': 'MCPulses',
        'event_id_key': 'LabelsMCCascade',
        'dom_exclusions_key': BadDomsList,
        'time_exclusions_key': ,
        'float_precision': 'float32',
        'add_charge_quantiles': False,
        'discard_pulses_from_excluded_doms': False,
    },

    # --------------------
    # LabelModule Settings
    # --------------------
    # which label module to use
    'label_module': 'snowstorm_cascades.SnowstormCascadeGeneratorLabelModule',

    # settings for the label module
    'label_settings':{
        # logarithm on labels:
        # (x, y, z, zenith, azimuth, energy, time)?
        'trafo_log': [False, False, False, False, False, True, False],
        'label_key': 'LabelsMCCascade',
        'additional_labels': [],
        'snowstorm_key': 'SnowstormParameterDict',
        'snowstorm_parameters': [
            # "Absorption",
            # # "AnisotropyScale",
            # # "DOMEfficiency",
            # "HoleIceForward_Unified_p0",
            # "HoleIceForward_Unified_p1",
            # "Scattering",
        ],
        'float_precision': 'float32',
    },

    # ---------------------
    # WeightModule Settings
    # ---------------------
    # which weight module to use
    'weight_module': 'dummy.DummyWeightModule',

    # settings for the weight module
    'weight_settings':{},

    # -------------------
    # MiscModule Settings
    # -------------------
    # which misc module to use
    'misc_module': 'dummy.DummyMiscModule',

    # settings for the misc module
    'misc_settings':{},

    # -------------------
    # FilterModule Settings
    # -------------------
    # which filter module to use
    'filter_module': 'general_filter.GeneralFilterModule',

    # settings for the filter module
    'filter_settings':{
        'constraints': [
            # ['LabelsMCCascade', 'cascade_z', '<', -250.],
        ],
    },
}

#---------------
# Model settings
#---------------

# Settings for the neural network model class
model_settings: {

    # The source class to use
    'model_class': 'egenerator.model.multi_source.independent.IndependentMultiSource',

    # configuration settings for DefaultMultiCascadeModel object
    config: {
        'sources': {
            'noise': 'noise',
            'cascade': 'cascade',
        },
    },

    # Base sources used by the multi-source class
    multi_source_bases: {

        noise: {
            # The noise source model class to use
            'model_class': 'egenerator.model.source.noise.default.DefaultNoiseModel',
            config: {'float_precision': float32},
        },

        cascade: {
            # The cascade source model class to use
            'model_class': 'egenerator.model.source.cascade.default.DefaultCascadeModel',

            config: {
                'keep_prob':,
                'shift_cascade_vertex': True,
                'add_anisotropy_angle': True,
                'add_opening_angle': True,
                'add_dom_angular_acceptance': False,
                'add_dom_coordinates': False,
                'num_local_vars': 0,
                'scale_charge': True,
                'scale_charge_by_relative_dom_efficiency': True,
                'scale_charge_by_global_dom_efficiency': False,
                'scale_charge_by_angular_acceptance': True,
                'scale_charge_by_relative_angular_acceptance': False,
                'prevent_mixture_component_swapping': False,
                'charge_distribution_type': 'negative_binomial',
                'num_latent_models': 10,
                'float_precision': float32,
                'float_precision_pdf_cdf': float64,

                # Baseline DOM Angular acceptance
                'use_constant_baseline_hole_ice': True,
                'baseline_hole_ice_p0': 0.25,
                'baseline_hole_ice_p1': -0.06,

                # This is a list of labels in addition to
                # (x, y, z, zenith, azimuth, energy, time) and snowstorm parameters
                'additional_label_names' : [
                ],

                # First convolutions
                'filter_size_list' : [[1, 1], [1, 1], [1, 1], [1, 1], [1, 1], [1, 1]],
                'num_filters_list' : [25, 100, 100, 100, 100, 42],
                'method_list' : ['locally_connected',
                                 'convolution', 'convolution', 'convolution',
                                 'convolution', 'convolution',
                                 ],
                'use_dropout_list' : False,
                'activation_list' : ['elu', 'elu', 'elu', 'elu', 'elu', ''],
                'use_batch_norm_list' : False,
                'use_residual_list' : [True, True, True, True, True, False]
            },
        },
    },
}

#----------------------
...
